
# -*- mode: ruby -*-
 # vi: set ft=ruby :
 
 # All Vagrant configuration is done below. The "2" in Vagrant.configure
 # configures the configuration version (we support older styles for
 # backwards compatibility). Please don't change it unless you know what
 
 # MULTI SERVER/VMs environment 
 #
 Vagrant.configure("2") do |config|

      # web  
      config.vm.define "web" do |web|  
        web.vm.box = "bento/ubuntu-18.04"
    
        web.vm.hostname = 'web'
        
        web.vm.network :private_network, ip: "192.168.33.10"

        web.vm.provision "shell", path: "./provisions/web_config.sh"

        web.vm.synced_folder "./web_config", "/home/vagrant/web_config"

        #config.hostsupdater.aliases = ["development.web"]
        # creating a link called development.web 
        # so we can access web page with this link instread of an IP   
            
      end
      
      # db
      config.vm.define "db" do |db|
        
        db.vm.box = "bento/ubuntu-18.04"
        
        db.vm.hostname = 'db'
        
        db.vm.network :private_network, ip: "192.168.33.11"

        db.vm.provision "shell", path: "./provisions/db_config.sh"
        
        db.vm.synced_folder "./db_config", "/home/vagrant/db_config"

        #config.hostsupdater.aliases = ["development.db"]     
      end
    
      # Ansible controller
      config.vm.define "controller" do |controller|
        
        controller.vm.box = "bento/ubuntu-18.04"
        
        controller.vm.hostname = 'controller'
        
        controller.vm.network :private_network, ip: "192.168.33.12"
 
        controller.vm.synced_folder "./ansible_config", "/home/vagrant/ansible_config"
 
        controller.vm.provision "shell", path: "./provisions/controller_config.sh"
        
        # config.hostsupdater.aliases = ["development.controller"] 
        
       end
    
    end